[comment encoding = UTF-8 /]
[module generateServiceImp('http://www.example.org/diagramaClases')]


[template public generateServiceImp(d : DiagramadeClases)]
[for (p: Paquete | d.paquetes_contenidos)]
[for (c : Clase | p.classifier_contenido->filter(Clase))]
[if (c.tieneABM)]
[file ('src/main/java/'+ d.artefactos_contenidos.groupID.substituteAll('.', '/')+'/'+ d.artefactos_contenidos.artefactID+'/servicios/'+c.nombre+'ServiceImp.java', false, 'UTF-8')]
package [d.artefactos_contenidos.groupID+'.'+d.artefactos_contenidos.artefactID/].servicios;

import [d.artefactos_contenidos.groupID/].[d.artefactos_contenidos.artefactID/].entidades.[c.nombre/];
import [d.artefactos_contenidos.groupID/].[d.artefactos_contenidos.artefactID/].repositorios.BaseRepository;
import [d.artefactos_contenidos.groupID/].[d.artefactos_contenidos.artefactID/].repositorio.[c.nombre/]Repository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class [c.nombre/]ServiceImp extends BaseServiceImp <[c.nombre/], Long> implements [c.nombre/]Service{

    @Autowired
    private [c.nombre/]Repository [c.nombre.toLowerFirst()/]Repository;

    public [c.nombre/]ServiceImp (BaseRepository<[c.nombre/], Long> baseRepository){
        super(baseRepository);
    }
    
}

[/file]
[/if]
[/for]
[/for]
[/template]
