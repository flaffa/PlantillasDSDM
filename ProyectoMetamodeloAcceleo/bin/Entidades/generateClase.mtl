[comment encoding = UTF-8 /]
[module generateClase('http://www.example.org/diagramaClases')]
[import generateAtributo/]
[import generateMetodo/]
[import generateImplementacion/]
[import generateHerencia/]
[import generateMetodosImplementados/]
[import generateRelaciones/]

[template public generateClase(d : DiagramadeClases)]
[for (p: Paquete | d.paquetes_contenidos)]
[for (c : Clase | p.classifier_contenido->filter(Clase))]

[if (not c.es_abstracta)]

[file ('src/main/java/'+ d.artefactos_contenidos.groupID.substituteAll('.', '/')+'/'+ d.artefactos_contenidos.artefactID+'/entidades/'+c.nombre+'.java', false, 'UTF-8')]
package [d.artefactos_contenidos.groupID+'.'+d.artefactos_contenidos.artefactID+'.'+ p.nombre/];

import java.util.ArrayList;
import java.util.List;

import javax.persistence.*;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@Table (name = "[c.nombre.toLowerFirst()/]")
@NoArgsConstructor
@AllArgsConstructor
@Getter
@Setter

public class [c.nombre/] [generateHerencia(c)/] [generateImplementacion(c)/] {
				[generateAtributo(c)/]
							
				[generateMetodo(c)/]
				[generateMetodosImplementados(c)/]
[generateRelaciones(c)/]
}
			[/file]
		[/if]
		[if (c.es_abstracta)]
		[file ('src/main/java/'+ d.artefactos_contenidos.groupID.substituteAll('.', '/')+'/'+ d.artefactos_contenidos.artefactID+'/entidades/'+c.nombre+'.java', false, 'UTF-8')]				package [d.artefactos_contenidos.groupID+'.'+d.artefactos_contenidos.artefactID+'.'+ p.nombre/];
import java.util.ArrayList;
import java.util.List;

import javax.persistence.*;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

				@Entity
				@Table (name = "[c.nombre.toLowerFirst()/]")
				@NoArgsConstructor
				@AllArgsConstructor
				@Getter
				@Setter
				public abstract class [c.nombre/] [generateHerencia(c)/] [generateImplementacion(c)/]{
				[generateAtributo(c)/]
				[generateRelaciones(c)/]

				[generateMetodo(c)/]
				[generateMetodosImplementados(c)/]
				}
			[/file]
		[/if]
		[if (c.es_final)]
		[file ('src/main/java/'+ d.artefactos_contenidos.groupID.substituteAll('.', '/')+'/'+ d.artefactos_contenidos.artefactID+'/entidades/'+c.nombre+'.java', false, 'UTF-8')]
				package [d.artefactos_contenidos.groupID+'.'+d.artefactos_contenidos.artefactID+'.'+ p.nombre/];

import java.util.ArrayList;
import java.util.List;

import javax.persistence.*;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

				@Entity
				@Table (name = "[c.nombre.toLowerFirst()/]")
				@NoArgsConstructor
				@AllArgsConstructor
				@Getter
				@Setter
				final class [c.nombre/] [generateHerencia(c)/] [generateImplementacion(c)/]{
				[generateAtributo(c)/]
				[generateRelaciones(c)/]

				[generateMetodo(c)/]
				[generateMetodosImplementados(c)/]
				}
			[/file]
		[/if]
	[/for]
[/for]
[/template]
